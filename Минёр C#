using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace miner1
{
    public partial class Form1 : Form
    {
        int height = 10;
        int width = 10;
        FieldButton[,] field;
        bool isFirstClick = true;
        int cellsOpened = 0;
        int sumBombs = 0;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            
            field = new FieldButton[height, width];
            GenerateField();
            ConfigureMapSize();
        }

        void ConfigureMapSize()
        {
            this.Width = 418;
            this.Height = 441;
        }

        public void GenerateField()
        {
            Random rnd = new Random();
            for (int i = 0; i < height; i++)
            {
                for (int j = 0; j < width; j++)
                {
                    FieldButton button = new FieldButton();
                    button.Location = new Point(i * 40, j * 40);
                    button.Size = new Size(40, 40);
                    button.isClickable = true;
                    if (rnd.Next(0, 100) < 20)
                    {
                        button.isBomb = true;
                        sumBombs++;
                    }
                    button.xCoord = j;
                    button.yCoord = i;
                    Controls.Add(button);
                    button.MouseUp+= new MouseEventHandler(FieldButtonClick);
                    field[j, i] = button;
                }
            }
        } 

        void FieldButtonClick(object sender, MouseEventArgs e)
        {
            FieldButton button = (FieldButton)sender;

            if(e.Button == MouseButtons.Left && button.isClickable)
            {
                if (button.isBomb)
                {
                    if(isFirstClick)
                    {
                        button.isBomb = false;
                        isFirstClick = false;
                        sumBombs--;
                        OpenRegion(button.xCoord, button.yCoord, button);
                    }
                    else
                    {
                       Exploide();
                    }                  
                }
                else
                {
                    EmptyFieldClick(button);
                }
                isFirstClick = false;
            }
            if(e.Button == MouseButtons.Right)
            {              
                button.isClickable = !button.isClickable;

                if(!button.isClickable)
                {
                    button.Text = "B";
                }
                else
                {
                    button.Text = "";
                }
            }
            checkWin();
        }

        void Exploide()
        {          
            for(int x=0;x<height;x++)
            {
                for(int y=0;y<width;y++)
                {
                    if(field[x,y].isBomb)
                    {
                        field[x, y].Text = "*";
                    }
                }
            }
            MessageBox.Show("Вы проиграли :( ");
            Application.Restart();
        }

        void EmptyFieldClick(FieldButton clickedButton)
        {
            for (int x = 0; x < height; x++)
            {
                for (int y = 0; y < width; y++)
                {
                    if(field[x,y]== clickedButton)
                    {
                        OpenRegion(x,y, clickedButton);
                    }
                }
            }          
        }

        void OpenRegion(int xCoord , int yCoord , FieldButton clickedButton)
        {
            Queue<FieldButton> queue = new Queue<FieldButton>();
            queue.Enqueue(clickedButton);
            clickedButton.wasAdded = true;
            while (queue.Count > 0)
            {
                FieldButton currentCell = queue.Dequeue();
                OpenCell(currentCell.xCoord, currentCell.yCoord, currentCell);
                cellsOpened++;
                if (CountBombsAround(currentCell.xCoord, currentCell.yCoord) == 0)
                {
                    for (int y = currentCell.yCoord - 1; y <= currentCell.yCoord+1; y++)
                    {
                        for (int x = currentCell.xCoord - 1; x <= currentCell.xCoord+1; x++)
                        {
                            if (x >= 0 && x < width && y < height & y >= 0)
                            {
                                if (!field[x, y].wasAdded)
                                {
                                    queue.Enqueue(field[x, y]);
                                    field[x, y].wasAdded = true;
                                }
                            }
                        }
                    }
                }
            }
        }

        void OpenCell(int x, int y, FieldButton clickedButton)
        {
            int bombsAround = CountBombsAround(x,y);
            if (bombsAround == 0)
            {

            }
            else
            {
                clickedButton.Text = "" + bombsAround;
            }
            clickedButton.Enabled = false;
        }

        int CountBombsAround(int xB, int yB)
        {
            int bombCount = 0;
            for (int x = xB-1; x <= xB+1; x++)
            {
                for (int y = yB-1; y <= yB+1; y++)
                {
                    if (x >= 0 && x<width && y >= 0 && y<height)
                    {
                        if (field[x, y].isBomb == true)
                        {
                            bombCount++;
                        }
                    }                    
                }
            }
            return bombCount;
        }

        void checkWin()
        {
            int cells = width * height;
            int emptyCells = cells - sumBombs;
            if(cellsOpened >= emptyCells)
            {
                MessageBox.Show("Вы победили :) ");
            }
        }
    }

    public class FieldButton : Button
    {
       public bool isBomb;
       public bool isClickable;
       public bool wasAdded;
       public int xCoord;
       public int yCoord;
    }
}
